import json
import re as regex

# Clear previous output
open("./output/mdt.asm", "w").close()

inputfile = open("./input/program.asm", "r")
outputfile = open("./output/mdt.asm", "w")

pattern = r'\s+'

def get_key(val, dict):
    for key, value in dict.items():
        if val == value:
            return key
    return None

# Flags
mSign = False
mDef = False

# Tables
mntab = {}
kpdtab = {}
pntab = {}

# Variables
macroName = ""
kpdtIndex = 1
mntIndex = 1
kpdtLoc = 1
mdtLoc = 0

for line in inputfile:
    line = line.strip()
    
    if line == "\n":
        continue
    
    cmd = regex.split(" ", line.rstrip())
    
    if len(cmd) == 1 and cmd[0] == "MACRO":
        mSign = True
        continue
    
    if mSign:
        macroName = cmd[0]
        pntab[macroName] = {}
        paramCnt = 0
        pp = 0
        kp = 0
        
        for parameter in cmd:
            parameter = parameter.replace(",", "")
            
            if '&' in parameter and '=' not in parameter:
                pp += 1
                paramCnt += 1
                paramName = parameter[1:]
                pntab[macroName][paramCnt] = paramName
            
            elif '&' in parameter and '=' in parameter:
                paramCnt += 1
                if kp == 0:
                    kpdtLoc = kpdtIndex
                kp += 1
                
                eqIndex = parameter.index("=")
                paramName = parameter[1:eqIndex]
                paramDefval = parameter[eqIndex + 1:]
                
                pntab[macroName][paramCnt] = paramName
                
                kpdtab[kpdtIndex] = {
                    "index": kpdtIndex,
                    "name": macroName,
                    "value": paramDefval if paramDefval else '----'
                }
                
                kpdtIndex += 1
            
        mSign = False
        mDef = True
        
        mntab[mntIndex] = {
            'index': mntIndex,
            'name': macroName,
            'pp': pp,
            'kp': kp,
            'kpdtp': kpdtLoc if kpdtLoc else '----',
            'mdtp': mdtLoc if mdtLoc else '----'
        }
        
        mntIndex += 1
        continue
    
    if mDef:
        mdtLoc += 1
        callLine = ""
        
        for command in cmd:
            command = command.replace(",", "")
            
            if '&' in command:
                replParamvalue = f"(p,{get_key(command[1:], pntab[macroName])})"
                callLine += replParamvalue + " "
            else:
                callLine += command + " "
        
        outputfile.write(f"{callLine.strip()} \n")
        continue
    
    if len(cmd) == 1 and cmd[0] == "MEND":
        mDef = False
        mdtLoc += 1
        outputfile.write("MEND\n")
        continue

# Writing tables to JSON files
with open("output/kpdtab.json", "w") as file:
    json.dump(kpdtab, file, indent=4)

with open("output/mntab.json", "w") as file:
    json.dump(mntab, file, indent=4)

with open("output/pntab.json", "w") as file:
    json.dump(pntab, file, indent=4)

inputfile.close()
outputfile.close()
