import re as regex
import json

with open("./Pass-2/pass2_out.txt", "w") as file:
    pass
file.close()

symbolTable = json.load(open("./Pass-1/output/symbolTable.json"))
literalTable = json.load(open("./Pass-1/output/literalTable.json"))
file = open("./Pass-1/output/ic.txt", "r")

pass2_out = open("./Pass-2/pass2_out.txt", "a")

pattern = r"\s+"

lc = 0
opcode = ""
op1code = ""
op2code = ""

for line in file:
    line.strip()
    if line == "\n":
        continue

    cmd = regex.split(pattern, line.rstrip())

    if len(cmd) == 4:
        lc = cmd[0]
        opcode = cmd[1].split(",")[1].replace(")", "")
        op1code = cmd[2].split("(")[1].replace(")", "")
        index = int(cmd[3].split(",")[1].replace(")", ""))


        if "L" in cmd[3]:
            for key, [ltcnt, lt, address] in literalTable.items():
                if ltcnt == index:
                    op1code = address
                    break

        elif "S" in cmd[3]:
            for key, [stcnt, symbol, address] in symbolTable.items():
                if stcnt == index:
                    op1code = address
                    break

    elif len(cmd) == 3:
        lc = cmd[0]
        print(cmd)
        opcode = cmd[1].split(",")[1].replace(")", "")
        
        index = int(cmd[2].split(",")[1].replace(")", ""))

        if "DL,01" in cmd[1]:
            opcode = "00"
            op1code = "0"
            op2code = "001"

        elif "DL,02" in cmd[1]:
            continue

        else:
            if "L" in cmd[2]:
                for key, [ltcnt, literal, address] in literalTable.items():
                    if ltcnt == index:
                        op1code = address
                        break

            elif "S" in cmd[2]:
                for key, [stcnt, symbol, address] in symbolTable.items():
                    if stcnt == index:
                        op1code = address
                        break

            op2code = ""

    elif len(cmd) == 2:
        if "IS" in cmd[1]:
            lc = cmd[0]
            opcode = cmd[1].split(",")[1].replace(")", "")
            op1code = ""
            op2code = ""
        else:
            pass

    else:
        continue

    pass2_out.write(f"{lc} {opcode} {op1code} {op2code}\n")

